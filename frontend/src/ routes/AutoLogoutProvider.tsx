// AutoLogoutProvider.tsx
import React, { useEffect, useRef, useState } from "react";
import { useNavigate } from "react-router-dom";

const TIMEOUT_DURATION = 60 * 60 * 1000; // 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
const WARNING_DURATION = 5 * 60 * 1000;  // 5 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô logout

const AutoLogoutProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const navigate = useNavigate();
  const timeoutRef = useRef<NodeJS.Timeout | null>(null);
  const warningRef = useRef<NodeJS.Timeout | null>(null);
  const [showWarning, setShowWarning] = useState(false);

  const resetTimer = () => {
    // ‡∏•‡πâ‡∏≤‡∏á timeout ‡πÄ‡∏î‡∏¥‡∏°
    if (timeoutRef.current) clearTimeout(timeoutRef.current);
    if (warningRef.current) clearTimeout(warningRef.current);
    setShowWarning(false); // ‡∏õ‡∏¥‡∏î popup ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ

    // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ logout
    timeoutRef.current = setTimeout(() => {
      console.log("üïí ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏ô‡∏≤‡∏ô -> logout");
      localStorage.clear();
      localStorage.removeItem("isLogin");
      localStorage.removeItem("role");
      navigate("/");
    }, TIMEOUT_DURATION);

    // ‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡πÅ‡∏™‡∏î‡∏á popup ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô logout
    warningRef.current = setTimeout(() => {
      console.log("‚ö†Ô∏è ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô logout ‡∏≠‡∏µ‡∏Å 5 ‡∏ô‡∏≤‡∏ó‡∏µ");
      setShowWarning(true);
    }, TIMEOUT_DURATION - WARNING_DURATION);
  };

  useEffect(() => {
    const activityEvents = ["mousemove", "mousedown", "keypress", "scroll", "click"];
    const handleActivity = () => {
      resetTimer(); // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏°‡∏µ event
    };

    resetTimer(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    activityEvents.forEach(event =>
      window.addEventListener(event, handleActivity)
    );

    return () => {
      if (timeoutRef.current) clearTimeout(timeoutRef.current);
      if (warningRef.current) clearTimeout(warningRef.current);
      activityEvents.forEach(event =>
        window.removeEventListener(event, handleActivity)
      );
    };
  }, []);

  return (
    <>
      {showWarning && (
        <div style={styles.overlay}>
          <div style={styles.modal}>
            <h2>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h2>
            <p>‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß</p>
          </div>
        </div>
      )}
      {children}
    </>
  );
};

export default AutoLogoutProvider;

// üëâ ‡∏™‡πÑ‡∏ï‡∏•‡πå popup ‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢
const styles = {
  overlay: {
    position: "fixed" as const,
    top: 0, left: 0, right: 0, bottom: 0,
    backgroundColor: "rgba(0,0,0,0.3)",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    zIndex: 9999,
  },
  modal: {
    backgroundColor: "#fff",
    padding: "2rem",
    borderRadius: "10px",
    textAlign: "center" as const,
    boxShadow: "0 0 10px rgba(0,0,0,0.5)",
  }
};
