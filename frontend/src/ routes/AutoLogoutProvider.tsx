// components/AutoLogoutProvider.tsx
import React, { useEffect, useRef, useState } from "react";
import { useNavigate } from "react-router-dom";
import * as jwtModule from "jwt-decode"; 

interface JwtPayload {
  exp: number;
  [key: string]: any;
}

const TIMEOUT_DURATION = 60 * 60 * 1000; // 1 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
const WARNING_DURATION = 5 * 60 * 1000;  // 5 ‡∏ô‡∏≤‡∏ó‡∏µ ‡∏Å‡πà‡∏≠‡∏ô logout

const AutoLogoutProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {
  const navigate = useNavigate();
  const timeoutRef = useRef<NodeJS.Timeout | null>(null);
  const warningRef = useRef<NodeJS.Timeout | null>(null);
  const [showWarning, setShowWarning] = useState(false);

  const logout = () => {
    localStorage.clear();
    navigate("/"); // üî• ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
  };

  const resetTimer = () => {
    if (timeoutRef.current) clearTimeout(timeoutRef.current);
    if (warningRef.current) clearTimeout(warningRef.current);
    setShowWarning(false);

    timeoutRef.current = setTimeout(() => {
      // console.log("üïí ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏ô‡∏≤‡∏ô -> logout");
      logout();
    }, TIMEOUT_DURATION);

    warningRef.current = setTimeout(() => {
      // console.log("‚ö†Ô∏è ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô logout 5 ‡∏ô‡∏≤‡∏ó‡∏µ");
      setShowWarning(true);
    }, TIMEOUT_DURATION - WARNING_DURATION);
  };

  const checkTokenExpiry = () => {
    const token = localStorage.getItem("token");
    if (!token) return;

    try {
      const payload: JwtPayload = jwtModule.jwtDecode(token); 
      const exp = payload.exp * 1000;
      if (Date.now() > exp) {
        // console.log("‚è≥ Token ‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ -> logout");
        logout();
      }
    } catch (err) {
      console.error("Error decoding token:", err);
      logout();
    }
  };

  const handleActivity = () => {
    resetTimer();
    checkTokenExpiry();
  };

  useEffect(() => {
  const activityEvents = ["mousemove", "mousedown", "keypress", "scroll", "click"];

  // üî• ‡πÄ‡∏ä‡πá‡∏Ñ token ‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ß‡πá‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å
  checkTokenExpiry();

  // üî• ‡∏ï‡∏±‡πâ‡∏á idle timer
  resetTimer();

  // üî• ‡∏ü‡∏±‡∏á event user activity
  activityEvents.forEach(event => window.addEventListener(event, handleActivity));

  // üî• ‡πÄ‡∏û‡∏¥‡πà‡∏° interval ‡∏°‡∏≤‡∏ï‡∏£‡∏ß‡∏à token expiry ‡∏ó‡∏∏‡∏Å‡πÜ 1 ‡∏ô‡∏≤‡∏ó‡∏µ
  const interval = setInterval(() => {
    checkTokenExpiry();
  }, 60 * 1000); // 1 ‡∏ô‡∏≤‡∏ó‡∏µ

  return () => {
    if (timeoutRef.current) clearTimeout(timeoutRef.current);
    if (warningRef.current) clearTimeout(warningRef.current);
    activityEvents.forEach(event => window.removeEventListener(event, handleActivity));
    clearInterval(interval);
  };
}, []);

  return (
    <>
      {showWarning && (
        <div style={styles.overlay}>
          <div style={styles.modal}>
            <h2>‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h2>
            <p>‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 5 ‡∏ô‡∏≤‡∏ó‡∏µ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß</p>
          </div>
        </div>
      )}
      {children}
    </>
  );
};

export default AutoLogoutProvider;

const styles = {
  overlay: {
    position: "fixed" as const,
    top: 0, left: 0, right: 0, bottom: 0,
    backgroundColor: "rgba(0,0,0,0.3)",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    zIndex: 9999,
  },
  modal: {
    backgroundColor: "#fff",
    padding: "2rem",
    borderRadius: "10px",
    textAlign: "center" as const,
    boxShadow: "0 0 10px rgba(0,0,0,0.5)",
  }
};
